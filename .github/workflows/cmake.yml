name: CMake

on:
  push:
    branches: [ master ]
  
env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-13]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2

    - name: Get Conan
      uses: turtlebrowser/get-conan@v1.0

    - name: Override cxx on ubuntu
      if: ${{ matrix.os == 'ubuntu-latest'}}
      run: |
        echo "CC=gcc-12" >> $GITHUB_ENV
        echo "CXX=g++-12" >> $GITHUB_ENV

    - name: List Xcode installations
      run: sudo ls -1 /Applications | grep "Xcode"
      if: ${{ matrix.os == 'macos-13' }}

    - name: Select Xcode 15.1 on mac
      run: sudo xcode-select -s /Applications/Xcode_15.1.app/Contents/Developer
      if: ${{ matrix.os == 'macos-13' }}

    - name: Setup MSVC dev command prompt
      uses: TheMrMilchmann/setup-msvc-dev@v3
      with:
        arch: x64
      if: ${{ matrix.os == 'windows-latest' }}

    - name: List installed MSVC toolchains
      run: Get-ChildItem -Path "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC" -Name
      if: ${{ matrix.os == 'windows-latest' }}

    - name: Install dependencies
      run: conan install . --build=missing -s build_type=${{env.BUILD_TYPE}} --output-folder=${{github.workspace}}/build --profile:all ./.github/workflows/conan-${{matrix.os}}-profile

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake ${{github.workspace}} -B ${{github.workspace}}/build -DRBC_ASAN=on -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/build/conan_toolchain.cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      # Build your program with the given configuration
      run: cd ${{github.workspace}}/build && ctest --output-on-failure
      if: ${{ matrix.os == 'ubuntu-latest' || matrix.os == 'macos-13' }}

    - name: Test windows
      # Build your program with the given configuration
      run: cd ${{github.workspace}}/build && ctest --output-on-failure -C Debug
      if: ${{ matrix.os == 'windows-latest' }}
